# fmt: off
# Warning: Don't edit file (autogenerated from python -m dev codegen).

ROBOCORP_GET_LANGUAGE_SERVER_PYTHON = "robocorp.getLanguageServerPython"  # Get a python executable suitable to start the language server
ROBOCORP_GET_LANGUAGE_SERVER_PYTHON_INFO = "robocorp.getLanguageServerPythonInfo"  # Get info suitable to start the language server {pythonExe, environ}
ROBOCORP_GET_PLUGINS_DIR = "robocorp.getPluginsDir"  # Get the directory for plugins
ROBOCORP_CREATE_ROBOT = "robocorp.createRobot"  # Create Task Package (Robot)
ROBOCORP_CREATE_ACTION_PACKAGE = "robocorp.createActionPackage"  # Create Action Package
ROBOCORP_CREATE_TASK_OR_ACTION_PACKAGE = "robocorp.createTaskOrActionPackage"  # Create Action Package
ROBOCORP_LIST_ROBOT_TEMPLATES_INTERNAL = "robocorp.listRobotTemplates.internal"  # Provides a list with the available Task Package (Robot) templates
ROBOCORP_CREATE_ROBOT_INTERNAL = "robocorp.createRobot.internal"  # Actually calls rcc to create the Task Package (Robot)
ROBOCORP_UPLOAD_ROBOT_TO_CLOUD = "robocorp.uploadRobotToCloud"  # Upload Task Package (Robot) to Control Room
ROBOCORP_LOCAL_LIST_ROBOTS_INTERNAL = "robocorp.localListRobots.internal"  # Lists the activities currently available in the workspace
ROBOCORP_IS_LOGIN_NEEDED_INTERNAL = "robocorp.isLoginNeeded.internal"  # Checks if the user is already linked to an account
ROBOCORP_GET_LINKED_ACCOUNT_INFO_INTERNAL = "robocorp.getLinkedAccountInfo.internal"  # Provides information related to the current linked account
ROBOCORP_CLOUD_LOGIN = "robocorp.cloudLogin"  # Link to Control Room
ROBOCORP_CLOUD_LOGIN_INTERNAL = "robocorp.cloudLogin.internal"  # Link to Control Room (receives credentials)
ROBOCORP_CLOUD_LIST_WORKSPACES_INTERNAL = "robocorp.cloudListWorkspaces.internal"  # Lists the workspaces available for the user (in the Control Room)
ROBOCORP_UPLOAD_TO_NEW_ROBOT_INTERNAL = "robocorp.uploadToNewRobot.internal"  # Uploads a Task Package (Robot) as a new Task Package (Robot) in the Control Room
ROBOCORP_UPLOAD_TO_EXISTING_ROBOT_INTERNAL = "robocorp.uploadToExistingRobot.internal"  # Uploads a Task Package (Robot) as an existing Task Package (Robot) in the Control Room
ROBOCORP_RUN_IN_RCC_INTERNAL = "robocorp.runInRcc.internal"  # Runs a custom command in RCC
ROBOCORP_RUN_ROBOT_RCC = "robocorp.runRobotRcc"  # Run Task Package (Robot)
ROBOCORP_RUN_ACTION_FROM_ACTION_PACKAGE = "robocorp.runActionFromActionPackage"  # Run Action (from Action Package)
ROBOCORP_DEBUG_ROBOT_RCC = "robocorp.debugRobotRcc"  # Debug Task Package (Robot)
ROBOCORP_DEBUG_ACTION_FROM_ACTION_PACKAGE = "robocorp.debugActionFromActionPackage"  # Debug Action (from Action Package)
ROBOCORP_ROBOTS_VIEW_TASK_RUN = "robocorp.robotsViewTaskRun"  # Launch Task
ROBOCORP_ROBOTS_VIEW_TASK_DEBUG = "robocorp.robotsViewTaskDebug"  # Debug Task
ROBOCORP_ROBOTS_VIEW_ACTION_RUN = "robocorp.robotsViewActionRun"  # Launch Action
ROBOCORP_ROBOTS_VIEW_ACTION_DEBUG = "robocorp.robotsViewActionDebug"  # Debug Action
ROBOCORP_ROBOTS_VIEW_ACTION_EDIT_INPUT = "robocorp.robotsViewActionEditInput"  # Configure Action Input
ROBOCORP_ROBOTS_VIEW_ACTION_OPEN = "robocorp.robotsViewActionOpen"  # Open Action
ROBOCORP_RUN_ROBOCORPS_PYTHON_TASK = "robocorp.runRobocorpsPythonTask"  # Run Robocorp's Python Task
ROBOCORP_DEBUG_ROBOCORPS_PYTHON_TASK = "robocorp.debugRobocorpsPythonTask"  # Debug Robocorp's Python Task
ROBOCORP_SAVE_IN_DISK_LRU = "robocorp.saveInDiskLRU"  # Saves some data in an LRU in the disk
ROBOCORP_LOAD_FROM_DISK_LRU = "robocorp.loadFromDiskLRU"  # Loads some LRU data from the disk
ROBOCORP_COMPUTE_ROBOT_LAUNCH_FROM_ROBOCORP_CODE_LAUNCH = "robocorp.computeRobotLaunchFromRobocorpCodeLaunch"  # Computes a Task Package (Robot) launch debug configuration based on the robocorp code launch debug configuration
ROBOCORP_SET_PYTHON_INTERPRETER = "robocorp.setPythonInterpreter"  # Set python executable based on robot.yaml
ROBOCORP_RESOLVE_INTERPRETER = "robocorp.resolveInterpreter"  # Resolves the interpreter to be used given a path
ROBOCORP_CLOUD_LOGOUT = "robocorp.cloudLogout"  # Unlink and remove credentials from Control Room
ROBOCORP_CLOUD_LOGOUT_INTERNAL = "robocorp.cloudLogout.internal"  # Unlink and remove credentials from Control Room internal
ROBOCORP_REFRESH_ROBOTS_VIEW = "robocorp.refreshRobotsView"  # Refresh Task Packages (Robots) view
ROBOCORP_REFRESH_ROBOT_CONTENT_VIEW = "robocorp.refreshRobotContentView"  # Refresh Task Package (Robot) Content view
ROBOCORP_NEW_FILE_IN_ROBOT_CONTENT_VIEW = "robocorp.newFileInRobotContentView"  # New File
ROBOCORP_NEW_FOLDER_IN_ROBOT_CONTENT_VIEW = "robocorp.newFolderInRobotContentView"  # New Folder
ROBOCORP_DELETE_RESOURCE_IN_ROBOT_CONTENT_VIEW = "robocorp.deleteResourceInRobotContentView"  # Delete
ROBOCORP_RENAME_RESOURCE_IN_ROBOT_CONTENT_VIEW = "robocorp.renameResourceInRobotContentView"  # Rename
ROBOCORP_REFRESH_CLOUD_VIEW = "robocorp.refreshCloudView"  # Refresh Robocorp view
ROBOCORP_GET_LOCATORS_JSON_INFO = "robocorp.getLocatorsJsonInfo"  # Obtain information from the locators.json given a robot.yaml
ROBOCORP_REMOVE_LOCATOR_FROM_JSON_INTERNAL = "robocorp.removeLocatorFromJson.internal"  # Remove a named locator from locators.json
ROBOCORP_REMOVE_LOCATOR_FROM_JSON = "robocorp.removeLocatorFromJson"  # Remove Locator
ROBOCORP_OPEN_LOCATORS_JSON = "robocorp.openLocatorsJson"  # Open locators.json
ROBOCORP_OPEN_CLOUD_HOME = "robocorp.openCloudHome"  # Open cloud home
ROBOCORP_NEW_ROBOCORP_INSPECTOR_BROWSER = "robocorp.newRobocorpInspectorBrowser"  # Add Web Locator
ROBOCORP_NEW_ROBOCORP_INSPECTOR_WINDOWS = "robocorp.newRobocorpInspectorWindows"  # Add Windows Locator
ROBOCORP_NEW_ROBOCORP_INSPECTOR_IMAGE = "robocorp.newRobocorpInspectorImage"  # Add Image Locator
ROBOCORP_NEW_ROBOCORP_INSPECTOR_JAVA = "robocorp.newRobocorpInspectorJava"  # Add Java Locator
ROBOCORP_OPEN_PLAYWRIGHT_RECORDER = "robocorp.openPlaywrightRecorder"  # Open Playwright Recorder
ROBOCORP_OPEN_PLAYWRIGHT_RECORDER_INTERNAL = "robocorp.openPlaywrightRecorder.internal"  # Open Playwright Recorder Internal
ROBOCORP_EDIT_ROBOCORP_INSPECTOR_LOCATOR = "robocorp.editRobocorpInspectorLocator"  # Edit locator
ROBOCORP_COPY_LOCATOR_TO_CLIPBOARD_INTERNAL = "robocorp.copyLocatorToClipboard.internal"  # Copy locator name to clipboard
ROBOCORP_OPEN_ROBOT_TREE_SELECTION = "robocorp.openRobotTreeSelection"  # Configure Task Package (Robot) (robot.yaml)
ROBOCORP_OPEN_ROBOT_CONDA_TREE_SELECTION = "robocorp.openRobotCondaTreeSelection"  # Configure Dependencies (conda.yaml)
ROBOCORP_OPEN_PACKAGE_YAML_TREE_SELECTION = "robocorp.openPackageYamlTreeSelection"  # Configure Action Package (package.yaml)
ROBOCORP_OPEN_EXTERNALLY = "robocorp.openExternally"  # Open externally
ROBOCORP_OPEN_IN_VS_CODE = "robocorp.openInVSCode"  # Open in VSCode
ROBOCORP_REVEAL_IN_EXPLORER = "robocorp.revealInExplorer"  # Reveal in File Explorer
ROBOCORP_REVEAL_ROBOT_IN_EXPLORER = "robocorp.revealRobotInExplorer"  # Reveal robot.yaml in File Explorer
ROBOCORP_CLOUD_UPLOAD_ROBOT_TREE_SELECTION = "robocorp.cloudUploadRobotTreeSelection"  # Upload Task Package (Robot) to Control Room
ROBOCORP_CREATE_RCC_TERMINAL_TREE_SELECTION = "robocorp.rccTerminalCreateRobotTreeSelection"  # Open terminal with Package Python environment
ROBOCORP_SEND_METRIC = "robocorp.sendMetric"  # Send metric
ROBOCORP_SUBMIT_ISSUE_INTERNAL = "robocorp.submitIssue.internal"  # Submit issue (internal)
ROBOCORP_SUBMIT_ISSUE = "robocorp.submitIssue"  # Submit issue to Robocorp
ROBOCORP_INSPECTOR_INTERNAL = "robocorp.inspector.internal"  # Inspector Manager (internal)
ROBOCORP_INSPECTOR = "robocorp.inspector"  # Open Inspector
ROBOCORP_INSPECTOR_DUPLICATE = "robocorp.inspector.duplicate"  # Create & manage locators
ROBOCORP_ERROR_FEEDBACK_INTERNAL = "robocorp.errorFeedback.internal"  # Error feedback (internal)
ROBOCORP_FEEDBACK_INTERNAL = "robocorp.feedback.internal"  # Feedback (internal)
ROBOCORP_CONFIGURATION_DIAGNOSTICS_INTERNAL = "robocorp.configuration.diagnostics.internal"  # Task Package (Robot) Configuration Diagnostics (internal)
ROBOCORP_CONFIGURATION_DIAGNOSTICS = "robocorp.configuration.diagnostics"  # Task Package (Robot) Configuration Diagnostics
ROBOCORP_RCC_TERMINAL_NEW = "robocorp.rccTerminalNew"  # Terminal with Task Package (Robot) environment
ROBOCORP_LIST_WORK_ITEMS_INTERNAL = "robocorp.listWorkItems.internal"  # Lists the work items available for a Task Package (Robot)
ROBOCORP_UPDATE_LAUNCH_ENV = "robocorp.updateLaunchEnv"  # Updates the environment variables used for some launch (given a Task Package (Robot))
ROBOCORP_UPDATE_LAUNCH_ENV_GET_VAULT_ENV_INTERNAL = "robocorp.updateLaunchEnv.getVaultEnv.internal"  # Provides the environment variables related to the vault.
ROBOCORP_NEW_WORK_ITEM_IN_WORK_ITEMS_VIEW = "robocorp.newWorkItemInWorkItemsView"  # New Work Item
ROBOCORP_DELETE_WORK_ITEM_IN_WORK_ITEMS_VIEW = "robocorp.deleteWorkItemInWorkItemsView"  # Delete Work Item
ROBOCORP_HELP_WORK_ITEMS = "robocorp.helpWorkItems"  # Work Items Help
ROBOCORP_CONVERT_OUTPUT_WORK_ITEM_TO_INPUT = "robocorp.convertOutputWorkItemToInput"  # Convert output work item to input
ROBOCORP_VERIFY_LIBRARY_VERSION_INTERNAL = "robocorp.verifyLibraryVersion.internal"  # Collect a library version and verify if it matches some expected version
ROBOCORP_CONNECT_WORKSPACE = "robocorp.connectWorkspace"  # Connect to Control Room Workspace (vault, storage, ...)
ROBOCORP_DISCONNECT_WORKSPACE = "robocorp.disconnectWorkspace"  # Disconnect from Control Room Workspace
ROBOCORP_GET_CONNECTED_VAULT_WORKSPACE_INTERNAL = "robocorp.getConnectedVaultWorkspace.internal"  # Gets workspace id currently connected
ROBOCORP_SET_CONNECTED_VAULT_WORKSPACE_INTERNAL = "robocorp.setConnectedVaultWorkspace.internal"  # Sets the currently connected Control Room Workspace
ROBOCORP_OPEN_VAULT_HELP = "robocorp.openVaultHelp"  # Open vault help
ROBOCORP_CLEAR_ENV_AND_RESTART = "robocorp.clearEnvAndRestart"  # Clear Robocorp (RCC) environments and restart Robocorp Code
ROBOCORP_SHOW_OUTPUT = "robocorp.showOutput"  # Show Robocorp Code > Output logs
ROBOCORP_SHOW_INTERPRETER_ENV_ERROR = "robocorp.showInterpreterEnvError"  # Show error related to interpreter env creation
ROBOCORP_OPEN_FLOW_EXPLORER_TREE_SELECTION = "robocorp.openFlowExplorerTreeSelection"  # Open Flow Explorer
ROBOCORP_CONVERT_PROJECT = "robocorp.convertProject"  # Conversion Accelerator from third party RPA to Robocorp Task Package (Robot)
ROBOCORP_PROFILE_IMPORT = "robocorp.profileImport"  # Import Profile
ROBOCORP_PROFILE_IMPORT_INTERNAL = "robocorp.profileImport.internal"  # Import Profile (internal)
ROBOCORP_PROFILE_SWITCH = "robocorp.profileSwitch"  # Switch Profile
ROBOCORP_PROFILE_SWITCH_INTERNAL = "robocorp.profileSwitch.internal"  # Switch Profile
ROBOCORP_PROFILE_LIST_INTERNAL = "robocorp.profileList.internal"  # List Profiles
ROBOCORP_HAS_PRE_RUN_SCRIPTS_INTERNAL = "robocorp.hasPreRunScripts.internal"  # Has Pre Run Scripts
ROBOCORP_RUN_PRE_RUN_SCRIPTS_INTERNAL = "robocorp.runPreRunScripts.internal"  # Run Pre Run Scripts
ROBOCORP_GET_PY_PI_BASE_URLS_INTERNAL = "robocorp.getPyPiBaseUrls.internal"  # Get PyPi base urls
ROBOCORP_START_ACTION_SERVER = "robocorp.startActionServer"  # Start Action Server
ROBOCORP_DOWNLOAD_ACTION_SERVER = "robocorp.downloadActionServer"  # Download Action Server
ROBOCORP_START_ACTION_SERVER_INTERNAL = "robocorp.startActionServer.internal"  # Start Action Server (internal)
ROBOCORP_LIST_ACTIONS_INTERNAL = "robocorp.listActions.internal"  # Lists the actions available in an action package given a root dir (internal)
ROBOCORP_PACKAGE_ENVIRONMENT_REBUILD = "robocorp.packageEnvironmentRebuild"  # Rebuild Package Environment

ALL_SERVER_COMMANDS = [
    ROBOCORP_GET_PLUGINS_DIR,
    ROBOCORP_LIST_ROBOT_TEMPLATES_INTERNAL,
    ROBOCORP_CREATE_ROBOT_INTERNAL,
    ROBOCORP_LOCAL_LIST_ROBOTS_INTERNAL,
    ROBOCORP_IS_LOGIN_NEEDED_INTERNAL,
    ROBOCORP_GET_LINKED_ACCOUNT_INFO_INTERNAL,
    ROBOCORP_CLOUD_LOGIN_INTERNAL,
    ROBOCORP_CLOUD_LIST_WORKSPACES_INTERNAL,
    ROBOCORP_UPLOAD_TO_NEW_ROBOT_INTERNAL,
    ROBOCORP_UPLOAD_TO_EXISTING_ROBOT_INTERNAL,
    ROBOCORP_RUN_IN_RCC_INTERNAL,
    ROBOCORP_SAVE_IN_DISK_LRU,
    ROBOCORP_LOAD_FROM_DISK_LRU,
    ROBOCORP_COMPUTE_ROBOT_LAUNCH_FROM_ROBOCORP_CODE_LAUNCH,
    ROBOCORP_RESOLVE_INTERPRETER,
    ROBOCORP_CLOUD_LOGOUT_INTERNAL,
    ROBOCORP_GET_LOCATORS_JSON_INFO,
    ROBOCORP_REMOVE_LOCATOR_FROM_JSON_INTERNAL,
    ROBOCORP_OPEN_PLAYWRIGHT_RECORDER_INTERNAL,
    ROBOCORP_SEND_METRIC,
    ROBOCORP_CONFIGURATION_DIAGNOSTICS_INTERNAL,
    ROBOCORP_LIST_WORK_ITEMS_INTERNAL,
    ROBOCORP_UPDATE_LAUNCH_ENV_GET_VAULT_ENV_INTERNAL,
    ROBOCORP_VERIFY_LIBRARY_VERSION_INTERNAL,
    ROBOCORP_GET_CONNECTED_VAULT_WORKSPACE_INTERNAL,
    ROBOCORP_SET_CONNECTED_VAULT_WORKSPACE_INTERNAL,
    ROBOCORP_PROFILE_IMPORT_INTERNAL,
    ROBOCORP_PROFILE_SWITCH_INTERNAL,
    ROBOCORP_PROFILE_LIST_INTERNAL,
    ROBOCORP_HAS_PRE_RUN_SCRIPTS_INTERNAL,
    ROBOCORP_RUN_PRE_RUN_SCRIPTS_INTERNAL,
    ROBOCORP_GET_PY_PI_BASE_URLS_INTERNAL,
    ROBOCORP_START_ACTION_SERVER_INTERNAL,
    ROBOCORP_LIST_ACTIONS_INTERNAL,
]

# fmt: on
